Создать текстовый файл с записями, включающие имя/фамилию человека, год рождения, пол и рост (в метрах). 
Упорядочить элементы по году рождения, имени/фамилии, полу или росту. 
Вывести результат. 
Указать элемент, по которому следует упорядочить, через консоль. 
А также реализовать возможность задавать несколько полей для упорядочивания.



Некорректный код:

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LEN 50

typedef struct {
    char name[MAX_LEN];
    char surname[MAX_LEN];
    int birth_year;
    char gender;
    double height;
} Person;

int compare_person(const void *a, const void *b) {
    return strcmp(((Person*)a)->name, ((Person*)b)->name);
}

void sort_people(Person *people, int num_people, int (*compare)(const void *, const void *)) {
    qsort(people, num_people, sizeof(Person), compare);
}

void print_people(Person *people, int num_people) {
    for (int i = 0; i < num_people; i++) {
        printf("%s %s, %d, %c, %.2f m\n", people[i].name, people[i].surname, people[i].birth_year, people[i].gender, people[i].height);
    }
}

int main() {
    FILE *file;
    char filename[MAX_LEN];
    int num_people;

    printf("Введите имя файла для записи данных: ");
    scanf("%s", filename);

    file = fopen(filename, "w");
    if (file == NULL) {
        printf("Ошибка открытия файла.\n");
        return 1;
    }

    printf("Введите количество записей: ");
    scanf("%d", &num_people);

    Person *people = (Person *)malloc(num_people * sizeof(Person));

    for (int i = 0; i < num_people; i++) {
        printf("Введите имя: ");
        scanf("%s", people[i].name);
        printf("Введите фамилию: ");
        scanf("%s", people[i].surname);
        printf("Введите год рождения: ");
        scanf("%d", &people[i].birth_year);
        printf("Введите пол (M/F): ");
        scanf(" %c", &people[i].gender);
        printf("Введите рост в метрах: ");
        scanf("%lf", &people[i].height);

        fprintf(file, "%s %s %d %c %.2f\n", people[i].name, people[i].surname, people[i].birth_year, people[i].gender, people[i].height);
    }

    fclose(file);

    int choice;
    printf("Выберите поле для сортировки:\n");
    printf("1 - Имя\n");
    printf("2 - Фамилия\n");
    printf("3 - Год рождения\n");
    printf("4 - Пол\n");
    printf("5 - Рост\n");
    scanf("%d", &choice);

    switch (choice) {
        case 1:
            sort_people(people, num_people, compare_person);
            break;
        // Добавьте другие кейсы для других полей сортировки
        default:
            printf("Некорректный выбор.\n");
            break;
    }

    printf("Результат сортировки:\n");
    print_people(people, num_people);

    free(people);

    return 0;
}



Другой вариант: 

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_SIZE 50

typedef struct {
    char name[MAX_SIZE];
    char surname[MAX_SIZE];
    int birth_year;
    char gender;
    float height;
} Person;

int compare(const void *a, const void *b) {
    return strcmp(((Person*)a)->name, ((Person*)b)->name);
}

void printPersons(Person persons[], int n) {
    for(int i = 0; i < n; i++) {
        printf("%s %s, %d, %c, %.2f\n", persons[i].name, persons[i].surname, persons[i].birth_year, persons[i].gender, persons[i].height);
    }
}

int main() {
    FILE *file;
    file = fopen("people.txt", "w");

    if (file == NULL) {
        printf("Ошибка в открытии файла.\n");
        return -1;
    }

    Person people[] = {
        {"Дмитрий", "Образцов", 2001, 'M', 1.80},
        {"Александр", "Пупкин", 2002, 'M', 1.60},
        {"Карина", "Волкова", 2005, 'F', 1.75}
    };

    for(int i = 0; i < sizeof(people)/sizeof(people[0]); i++) {
        fprintf(file, "%s %s %d %c %.2f\n", people[i].name, people[i].surname, people[i].birth_year, people[i].gender, people[i].height);
    }

    fclose(file);

    char order[MAX_SIZE];
    printf("Введите данные для сортировки данных: ");
    scanf("%s", order);

    if (strcmp(order, "имя") == 0) {
        qsort(people, sizeof(people)/sizeof(people[0]), sizeof(Person), compare);
    }

    printf("Ordered list:\n");
    printPersons(people, sizeof(people)/sizeof(people[0]));

    return 0;
}


Другоей: 

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Person {
    char name[50];
    char surname[50];
    int birth_year;
    char gender;
    float height;
};

// Compare function for qsort
int compare(const void *a, const void *b) {
    struct Person *person1 = (struct Person *)a;
    struct Person *person2 = (struct Person *)b;

    // Compare based on birth year
    if (person1->birth_year != person2->birth_year) {
        return person1->birth_year - person2->birth_year;
    }

    // If birth year is the same, compare based on name
    int name_cmp = strcmp(person1->name, person2->name);
    if (name_cmp != 0) {
        return name_cmp;
    }

    // If name is the same, compare based on surname
    int surname_cmp = strcmp(person1->surname, person2->surname);
    if (surname_cmp != 0) {
        return surname_cmp;
    }

    // If surname is the same, compare based on gender
    if (person1->gender != person2->gender) {
        return person1->gender - person2->gender;
    }

    // If gender is the same, compare based on height
    if (person1->height != person2->height) {
        return (person1->height > person2->height) - (person1->height < person2->height);
    }

    return 0;
}

int main() {
    int n;
    printf("Enter the number of people: ");
    scanf("%d", &n);

    struct Person *people = malloc(n * sizeof(struct Person));

    printf("Enter %d people:\n", n);
    for (int i = 0; i < n; i++) {
        printf("Person %d:\n", i + 1);
        printf("Name: ");
        scanf("%s", people[i].name);
        printf("Surname: ");
        scanf("%s", people[i].surname);
        printf("Birth year: ");
        scanf("%d", &people[i].birth_year);
        printf("Gender (M/F): ");
        scanf(" %c", &people[i].gender);
        printf("Height (in cm): ");
        scanf("%f", &people[i].height);
    }

    printf("Sort by (birth year/name/surname/gender/height): ");
    char sort_by[10];
    scanf("%s", sort_by);

    qsort(people, n, sizeof(struct Person), compare);

    printf("\nSorted people:\n");
    for (int i = 0; i < n; i++) {
        printf("Person %d: %s %s, Birth year: %d, Gender: %c, Height: %.2f cm\n",
               i + 1, people[i].name, people[i].surname, people[i].birth_year, people[i].gender, people[i].height);
    }

    free(people);

    return 0;
}

