Объявить тип-структуру humen, включающую имя человека, фамилию и год рождения. 
Объявить два массива из четырёх элементов типа humen.
Ввести с консоли или из файла элементы одного массива и построить на их основе другой, упорядочив элементы по годам рождения. 
Вывести результат.
Нужно вывести и в файл и в консоль 


#include <stdio.h>
#include <string.h>

typedef struct {
    char name[50];
    char surname[50];
    int birth_year;
} human;

void sort_by_birth_year(human *arr, int size) {
    int i, j;
    human temp;
    for (i = 0; i < size - 1; i++) {
        for (j = 0; j < size - i - 1; j++) {
            if (arr[j].birth_year > arr[j + 1].birth_year) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int main() {
    human arr1[4];
    human arr2[4];

    // Ввод элементов первого массива
    printf("Введите данные для первого массива:\n");
    for (int i = 0; i < 4; i++) {
        printf("Человек %d:\n", i + 1);
        printf("Имя: ");
        scanf("%s", arr1[i].name);
        printf("Фамилия: ");
        scanf("%s", arr1[i].surname);
        printf("Год рождения: ");
        scanf("%d", &arr1[i].birth_year);
    }

    // Сортировка по годам рождения
    sort_by_birth_year(arr1, 4);

    // Копирование отсортированных элементов во второй массив
    memcpy(arr2, arr1, sizeof(arr1));

    // Вывод отсортированного массива
    printf("\nОтсортированный массив по годам рождения:\n");
    for (int i = 0; i < 4; i++) {
        printf("Человек %d: %s %s, год рождения %d\n", i + 1, arr2[i].name, arr2[i].surname, arr2[i].birth_year);
    }

    return 0;
}


По-другому: 

#include <stdio.h>
#include <string.h>

typedef struct {
    char name[50];
    char surname[50];
    int birth_year;
} Human;

void sortHumansByYear(Human humans[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (humans[j].birth_year > humans[j + 1].birth_year) {
                Human temp = humans[j];
                humans[j] = humans[j + 1];
                humans[j + 1] = temp;
            }
        }
    }
}

int main() {
    Human humans1[4];
    Human humans2[4];

    printf("Введите имя, фамилию и год рождения для 4 человек:\n");
    for (int i = 0; i < 4; i++) {
        scanf("%s %s %d", humans1[i].name, humans1[i].surname, &humans1[i].birth_year);
    }

    sortHumansByYear(humans1, 4);

    FILE *file = fopen("output.txt", "w");
    if (file == NULL) {
        printf("Error opening file.\n");
        return 1;
    }

    printf("Вывод:\n");
    fprintf(file, "Sorted list of humans by birth year:\n");
    for (int i = 0; i < 4; i++) {
        printf("%s %s %d\n", humans1[i].name, humans1[i].surname, humans1[i].birth_year);
        fprintf(file, "%s %s %d\n", humans1[i].name, humans1[i].surname, humans1[i].birth_year);
    }

    fclose(file);
    
    return 0;
}


Этот код на языке программирования C содержит определение структуры Human, функцию sortHumansByYear для сортировки массива структур Human по году рождения, и функцию main, которая запрашивает у пользователя информацию о 4 человеках, сортирует их по году рождения и записывает отсортированный список в файл "output.txt".

1. Структура Human определяет данные о человеке, включая имя, фамилию и год рождения.

2. Функция sortHumansByYear принимает массив структур Human и его размер. Она использует алгоритм сортировки пузырьком для сортировки людей по возрастанию года рождения.

3. В функции main создаются два массива структур Human: humans1 и humans2.

4. Пользователю предлагается ввести данные о 4 людях (имя, фамилия, год рождения). Эти данные сохраняются в массиве humans1.

5. Вызывается функция sortHumansByYear, чтобы отсортировать массив humans1 по году рождения.

6. Открывается файл "output.txt" для записи отсортированного списка людей.

7. Отсортированный список людей выводится на экран и записывается в файл "output.txt" с помощью функции fprintf.

8. Файл закрывается, и программа завершается.

Этот код демонстрирует работу с массивами структур, сортировку данных и запись данных в файл на языке программирования C.
