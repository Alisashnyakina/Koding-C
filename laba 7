Объявить тип-структуру humen, включающую имя человека, фамилию и год рождения. 
Объявить два массива из четырёх элементов типа humen.
Ввести с консоли или из файла элементы одного массива и построить на их основе другой, упорядочив элементы по годам рождения. 
Вывести результат.

#include <stdio.h>
#include <string.h>

typedef struct {
    char name[50];
    char surname[50];
    int birth_year;
} human;

void sort_by_birth_year(human *arr, int size) {
    int i, j;
    human temp;
    for (i = 0; i < size - 1; i++) {
        for (j = 0; j < size - i - 1; j++) {
            if (arr[j].birth_year > arr[j + 1].birth_year) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int main() {
    human arr1[4];
    human arr2[4];

    // Ввод элементов первого массива
    printf("Введите данные для первого массива:\n");
    for (int i = 0; i < 4; i++) {
        printf("Человек %d:\n", i + 1);
        printf("Имя: ");
        scanf("%s", arr1[i].name);
        printf("Фамилия: ");
        scanf("%s", arr1[i].surname);
        printf("Год рождения: ");
        scanf("%d", &arr1[i].birth_year);
    }

    // Сортировка по годам рождения
    sort_by_birth_year(arr1, 4);

    // Копирование отсортированных элементов во второй массив
    memcpy(arr2, arr1, sizeof(arr1));

    // Вывод отсортированного массива
    printf("\nОтсортированный массив по годам рождения:\n");
    for (int i = 0; i < 4; i++) {
        printf("Человек %d: %s %s, год рождения %d\n", i + 1, arr2[i].name, arr2[i].surname, arr2[i].birth_year);
    }

    return 0;
}
